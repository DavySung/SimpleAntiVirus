import os.path
from filehash import HashFile
from Quarantining import quarantine

class Scanner:

    def scan(target_directory=None):
        checked_files = 0
        # todo replace file path location when uploaded to git
        known_mal_hash = "D:\Uni\Capstone 02\hashes\MD5 Hahses.txt"
        found_viruses = []
        tar_dir = target_directory

        # Check if target directory exists
        if tar_dir is None:
            # todo this is broken
            # If target directory is empty, just start scanning from C drive
            tar_dir = 'C:\\'
            full_scan = True
        else:
            if not os.path.isdir(tar_dir):
                #Throw error because Target Directory is invalid
                raise Exception(tar_dir + " is not a valid directory")
        # Explore the directory
        for root, dirs, files in os.walk(tar_dir):
            for filename in files:
                # make a hash file for the file we are to scan
                checked_files += 1
                hash_checker = HashFile(os.path.join(root, filename))
                #Read malware hashes
                with open(known_mal_hash) as mal_hashes:
                    for line in mal_hashes:
                        if hash_checker.ChechHash(line, hash_checker.hash_file()):
                            found_viruses.append(os.path.join(root, filename))
                            quarantine(root, filename)
        print(checked_files + " files scanned \n")
        if len(found_viruses) > 0:
            print("Malicious software found and quarantined:  \n")
            for line in found_viruses:
                print(line + "\n")
        else:
            print ("No malicious software identified")

