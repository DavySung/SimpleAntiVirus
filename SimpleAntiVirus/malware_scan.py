import os
import string
import hashlib
import tkinter as tk
from tkinter import messagebox
from filehash import HashFile
from Quarantining import Quarantine



class MalScan:

    def scan(self, target_directory=None):
        checked_files = 0
        #known_mal_hash = "scan_known_malware/MD5_hashes.txt"
        known_mal_hash = "scan_known_malware/test_hashes.txt"
        found_viruses = []
        tar_dir = target_directory
        resultsText = ""

        # Check if target directory exists
        if tar_dir is None or not os.path.isdir(tar_dir):
            # Throw error because Target Directory is invalid
            resultsText = "Invalid file pathway selected"
            return resultsText
        # Explore the directory
        hash_checker = HashFile()
        quarantiner = Quarantine()
        mal_hashes = []
        # Read malware hashes
        with open(known_mal_hash) as fmal_hashes:
            for line in fmal_hashes:
                mal_hashes.append(line.strip())
        fmal_hashes.close()
        for root, dirs, files in os.walk(tar_dir):
            for filename in files:
                #print(root + "\\" + filename)
                for line in mal_hashes:
                    # Check if file we are checking matches any known malware hashes
                    if hash_checker.CheckHash(line, hash_checker.hash_file(root + "\\" + filename, hashlib.sha256()), line, hash_checker.hash_file(root + "\\" + filename, hashlib.md5()), line, hash_checker.hash_file(root + "\\" + filename, hashlib.sha1())):
                        # virus found, add its pathway to a list, then quarantine it
                        found_viruses.append(os.path.join(root, filename))
                        quarantine_apath_value = root + "\\" + filename
                        quarantiner.apath = quarantine_apath_value
                        quarantiner.quarantine_file()
                        break
                checked_files += 1
        resultsText += str(checked_files) + " files scanned \n"
        if len(found_viruses) > 0:
            resultsText += "Malicious software found and quarantined:  \n"
            for line in found_viruses:
                resultsText += (line + "\n")
        else:
            resultsText += "No malicious software identified in " + tar_dir

        return resultsText

    def full_scan(self):
        # create a list for drives
        available_drives = ['%s:' % d for d in string.ascii_uppercase if os.path.exists('%s:' % d)]
        # loop through drives and scan them
        for drive in available_drives:

            self.scan(drive)
