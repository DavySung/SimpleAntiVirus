import os
import string
from filehash import HashFile
from Quarantining import Quarantine


class MalScan:

    def scan(self, target_directory=None):
        checked_files = 0
        known_mal_hash = "scan_known_malware/MD5_hashes.txt"
        # know_mal_hash = "scan_known_malware/test_hashes.txt"
        found_viruses = []
        tar_dir = target_directory

        # Check if target directory exists
        if tar_dir is None or not os.path.isdir(tar_dir):
            # Throw error because Target Directory is invalid
            raise Exception(tar_dir + " is not a valid directory \n")
        # Explore the directory
        hash_checker = HashFile()
        quarantiner = Quarantine()
        for root, dirs, files in os.walk(tar_dir):
            for filename in files:
                checked_files += 1
                # Read malware hashes
                with open(known_mal_hash) as mal_hashes:
                    for line in mal_hashes:
                        # Check if file we are checking matches any known malware hashes
                        if hash_checker.ChechHash(line, hash_checker.hash_file()):
                            # virus found, add its pathway to a list, then quarantine it
                            found_viruses.append(os.path.join(root, filename))
                            quarantiner.quarantine_file(root, filename)
        print(str(checked_files) + " files scanned \n")
        if len(found_viruses) > 0:
            print("Malicious software found and quarantined:  \n")
            for line in found_viruses:
                print(line + "\n")
        else:
            print("No malicious software identified in " + tar_dir)

    def full_scan(self):
        # create a list for drives
        available_drives = ['%s:' % d for d in string.ascii_uppercase if os.path.exists('%s:' % d)]
        # loop through drives and scan them
        for drive in available_drives:
            self.scan(drive)
